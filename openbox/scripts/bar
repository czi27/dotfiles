#!/bin/bash

a="%{F#B8BB26}"
t="%{F-}"
sp="%{F#222529}-%{F-}" 

add ()
{
	var=$(ip route get 1 | awk '{print $(NF-2);exit}')
	echo "$a$t $var"
}

gn(){
	len=$(echo -n "$(xdotool getwindowfocus getwindowname)" | wc -m)
	max_len=70
	if [ "$len" -gt "$max_len" ];then
		echo -n "$(xdotool getwindowfocus getwindowname | cut -c 1-$max_len)..."
	else
		echo -n "$(xdotool getwindowfocus getwindowname)"
	fi
}

bt2() {
	BATTACPI=$(acpi --battery)
	BATPERC=$(echo $BATTACPI | cut -d, -f2 | tr -d '[:space:]')

	if [[ $BATTACPI == *"100%"* ]]
	then
		echo -e -n "\uf00c $BATPERC"
	elif [[ $BATTACPI == *"Discharging"* ]]
	then
		BATPERC=${BATPERC::-1}
		if [ $BATPERC -le "10" ]
		then
			echo -e -n "\uf244"
		elif [ $BATPERC -le "25" ]
		then
			echo -e -n "\uf243"
		elif [ $BATPERC -le "50" ]
		then
			echo -e -n "\uf242"
		elif [ $BATPERC -le "75" ]
		then
			echo -e -n "\uf241"
		elif [ $BATPERC -le "100" ]
		then
			echo -e -n "\uf240"
		fi
		echo -e " $BATPERC%"
	elif [[ $BATTACPI == *"Charging"* && $BATTACPI != *"100%"* ]]
	then
		echo -e "\uf0e7 $BATPERC"
	elif [[ $BATTACPI == *"Unknown"* ]]
	then
		echo -e "$BATPERC"
	fi
}

bat ()
{
	device="BAT0"
	var=$(cat /sys/class/power_supply/${device}/capacity)

	case $var in
		[0-9])  out="$a$t $var%";;
		[1-7]?) out="$a$t $var%";;
		*)      out="$a$t 100%"
	esac
	echo "$out"
}

clk ()
{
	var=$(date +%H:%M\ %P)
	echo "$a$t $var"

}

dte ()
{
        var=$(date +%a\ %d\ %b)
        echo "$a$t $var"
}

ntw ()
{
	device=$(find /sys/class/net/ -name "wlp*" | grep -o '[^/]\+$')
	status=$(cat /sys/class/net/${device}/operstate)
	quality=$(grep ${device} /proc/net/wireless | awk '{ print int($3 * 100 / 70) }')
	essid=$(iwconfig ${device} | grep ESSID | sed 's/ //g' | sed 's/.*://' | cut -d "\"" -f 2)
	echo "$a$t ${essid} ${quality}%"
}

vol ()
{
  var=$(amixer get Master | awk '$0~/Left/{print $5}' | tr -d '[]-')
  #var=$(amixer get Master | awk '$0~/Mono/{print $4}' | tr -d '[]-')
        echo "$a$t $var"
}

wth()
{
	API_KEY="4b3d1ed697c179a6961c7793305a250a"
	# Check on http://openweathermap.org/find
	CITY_ID="2507480"		
	WEATHER_URL="http://api.openweathermap.org/data/2.5/weather?id=${CITY_ID}&appid=${API_KEY}&units=metric"
	SYMBOL_CELSIUS="°"

	WEATHER_INFO=$(curl -s "${WEATHER_URL}")
	WEATHER_MAIN=$(echo "${WEATHER_INFO}" | grep -o -e '\"main\":\"[a-zA-Z]*\"' | awk -F ':' '{print $2}' | tr -d '"')
	WEATHER_TEMP=$(echo "${WEATHER_INFO}" | grep -o -e '\"temp\":\-\?[0-9]*' | awk -F ':' '{print $2}' | tr -d '"')

	case $WEATHER_MAIN in
		Clear)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Clouds)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Rain)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Drizzle)	out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Thunderstorm)	out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Snow)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Mist)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}";;
		Fog)		out="$a$t ${WEATHER_TEMP}${SYMBOL_CELSIUS}"
	esac
	echo "$out"
}

wttr(){

    #wttr_get=$(curl -Ss 'https://wttr.in/?0&T&Q' | cut -c 16- | head -2 | xargs echo)
	wttr_get_name=$(curl -Ss 'https://wttr.in/' | cut -c 16- | head -2 | xargs echo)
	getWea=$(~/Application/weather3.sh Kediri)
	echo "${getWea}" 

}

wifi(){
	WIFISTR=$( iwconfig wlp2s0 | grep "Link" | sed 's/ //g' | sed 's/LinkQuality=//g' | sed 's/\/.*//g')
	if [ ! -z $WIFISTR ] ; then
		WIFISTR=$(( ${WIFISTR} * 100 / 70))
		ESSID=$(iwconfig wlp2s0 | grep ESSID | sed 's/ //g' | sed 's/.*://' | cut -d "\"" -f 2)
		if [ $WIFISTR -ge 1 ] ; then
			echo -e "\uf1eb ${ESSID} ${WIFISTR}%"
		fi
	fi
}

lang(){
	CURRENTLANG=$(head -n 1 /tmp/uim-state)
	if [[ $CURRENTLANG == *"English"* ]] ; then
		echo -e " \uf0ac ENG"
	elif [[ $CURRENTLANG == *"Katakana"* ]] ; then
		echo -e " \uf0ac カタカナ"
	elif [[ $CURRENTLANG == *"Hiragana"* ]] ; then
		echo -e " \uf0ac ひらがな"
	else
		echo -e " \uf0ac \uf128"
	fi
}

cpu ()
{
	var=$(sensors | awk '/Core 0/ {print $3}')
	echo "$a$t $var"
}

mem ()
{
	var=$(free -h | awk '/Mem/ {print $3}')
	echo "$a$t $var"
}

hdd ()
{
	var=$(df -h | grep '/$' | awk '{print $5}')
	echo "$a$t $var"
}

while true
do
	BAR_INPUT="%{l}${sp} $(clk) ${sp} $(dte) ${sp} $(wttr) ${sp} $(gn)  %{c}%{r} ${sp} $(ntw) ${sp} $(vol) ${sp} $(mem) ${sp} $(bt2) ${sp}"
	echo $BAR_INPUT 2>/dev/null
#	echo $BAR_INPUT 
	sleep 0.1s
done
